# Matrix build example - test against multiple Ruby/Rails versions
name: Migration Check - Matrix

on:
  pull_request:
    paths:
      - 'db/**'
      - 'Gemfile*'
      - '.github/workflows/**'

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        ruby: ['3.0', '3.1', '3.2', '3.3']
        rails: ['7.0', '7.1', '7.2']
        exclude:
          # Rails 7.2 requires Ruby 3.1+ due to keyword argument changes
          # See: https://guides.rubyonrails.org/upgrading_ruby_on_rails.html#ruby-versions
          - ruby: '3.0'
            rails: '7.2'
    
    env:
      RAILS_VERSION: ${{ matrix.rails }}
    
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: true
      
      - name: Setup database
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
          RAILS_ENV: test
        run: |
          bundle exec rails db:create
          bundle exec rails db:schema:load
      
      - name: Run tests
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
          RAILS_ENV: test
        run: bundle exec rspec
      
      - name: Check migrations
        uses: ./.github/actions/migration-guard
        with:
          database-url: postgresql://postgres:postgres@localhost:5432/test_db
          strict: ${{ matrix.rails == '7.2' }}  # Strict mode for latest Rails only